name: Build Kivy APK (Docker)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@v3

      - name: ✅ Confirm runner is alive
        run: echo "Runner OK – starting Docker build…"

      - name: 🔍 Check for main.py in source
        run: |
          if [ ! -f src/main.py ]; then
            echo "❌ main.py is missing from src/"
            exit 1
          else
            echo "✅ main.py found in src/"
          fi

      - name: 🐳 Build APK using Docker
        run: |
          docker run --rm -u 0 \
            -v "${{ github.workspace }}:/app" \
            bodolsog/py3-kivy-buildozer:latest \
            /bin/bash -c " \
              cd /app && \
              # ensure buildozer.spec points at src/ and has copy_source enabled
              sed -i 's|^source.dir.*|source.dir = src|' buildozer.spec && \
              # (manually add android.copy_source if not already present)
              grep -q '^android.copy_source' buildozer.spec \
                || echo 'android.copy_source = True' >> buildozer.spec && \
              yes | buildozer --verbose android debug \
            "

      - name: 📂 Verify main.py made it into the APK
        run: |
          echo "🔓 Inspecting APK for your raw sources…"
          unzip -l bin/*.apk | grep -q 'assets/src/main.py' \
            && echo "✅ assets/src/main.py is packaged!" \
            || { echo "❌ assets/src/main.py NOT found in APK – buildozer.spec might still be excluding it."; exit 1; }

      - name: 📦 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: my-kivy-app
          path: bin/*.apk
