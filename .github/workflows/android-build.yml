name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # where Buildozer will install the SDK
      ANDROID_SDK_ROOT: ${{ runner.home }}/.buildozer/android/platform/android-sdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ccache git zip unzip \
            libffi-dev libssl-dev libncurses-dev libncurses5-dev \
            libsqlite3-dev libjpeg-dev zlib1g-dev libgl1-mesa-dev \
            libbz2-dev libgdbm-dev liblzma-dev libncursesw5-dev \
            libreadline-dev libtool automake autoconf m4 cmake

      - name: Install Buildozer & Cython
        run: |
          python -m pip install --upgrade pip
          python -m pip install buildozer cython

      - name: Install Android SDK tools & accept licenses
        # `sdkmanager` comes bundled with the "cmdline-tools"
        run: |
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --install \
            "cmdline-tools;latest" \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;36.0.0"
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      - name: Build debug APK
        working-directory: src   # adjust if your buildozer.spec isnâ€™t in src/
        run: buildozer --verbose android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: LifeTime-App-APK
          path: |
            src/bin/*.apk     # adjust if your APK lands somewhere else
